kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: magalix-agent
  namespace: kube-system
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: magalix-agent
    spec:
      serviceAccountName: magalix-agent
      restartPolicy: Always
      containers:
        - image: magalixcorp/agent:latest
          imagePullPolicy: Always
          name: agent
          args:
            - --kube-incluster
            - --gateway=wss://agent-gateway.magalix.com/
            - --source=kubelet
            - --trace-log=/agent.log
            - --port=8080
          envFrom:
            - secretRef:
                name: magalix-agent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          livenessProbe:
            httpGet:
              path: /live
              port: 8080
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080

---

apiVersion: v1
kind: Secret
metadata:
  name: magalix-agent
  namespace: kube-system
type: Opaque
data:
  ACCOUNT_ID: #ADD ACCOUNT ID - go to https://console.magalix.com
  CLUSTER_ID: # ADD CLUSTER ID - go to https://console.magalix.com
  SECRET: # ADD CLUSTER SPECIFIC SECRET - go to https://console.magalix.com

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: magalix-agent
  namespace: kube-system

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magalix-agent
rules:
- apiGroups: ["", "extensions", "apps", "batch", "metrics.k8s.io", "networking.k8s.io"]
  resources: ["nodes", "nodes/stats", "nodes/metrics", "nodes/proxy", "namespaces", "pods", "limitranges", "deployments", "replicationcontrollers", "statefulsets", "daemonsets", "replicasets", "jobs", "cronjobs", "ingresses", "ingressclasses", "services", "networkpolicies"]
  verbs: ["get", "watch", "patch"]
- apiGroups: ["", "rbac.authorization.k8s.io", "storage.k8s.io"]
  resources: ["clusterrolebindings", "clusterroles", "roles", "rolebindings", "persistentvolumes", "persistentvolumeclaims", "storageclasses"]
  verbs: ["get", "watch"]
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: magalix-agent
subjects:
- kind: ServiceAccount
  name: magalix-agent
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: magalix-agent
  apiGroup: rbac.authorization.k8s.io
