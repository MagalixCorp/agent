version: 2
jobs:
  "build & push":
    docker:
      - image: magalixcorp/circleci-golang-lite:1.14

    steps:
      - run:
          name: Set up source path directory
          command: |
            echo 'export SOURCE_PATH=/home/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV
            echo 'export GO111MODULE=on' >> $BASH_ENV
            echo 'export GOPRIVATE=github.com/MagalixTechnologies' >> $BASH_ENV
            echo 'export PATH=/usr/local/bin/upx:$PATH' >> $BASH_ENV
            echo 'export PATH=/usr/bin/gcloud:$PATH' >> $BASH_ENV
            echo 'export PATH=/root/google-cloud-sdk/bin:$PATH' >> $BASH_ENV

      - run:
          name: Install Google Cloud SDK
          command: |
            apk update
            apk add python

            # Update the package list and install the Cloud SDK
            curl https://sdk.cloud.google.com | bash -s -- --disable-prompts

            # The next line updates PATH for the Google Cloud SDK.
            source /root/google-cloud-sdk/completion.bash.inc

            source $BASH_ENV
      - run:
          name: Checkout code
          command: |
            mkdir -p ~/.ssh
            echo 'StrictHostKeyChecking no' >> ~/.ssh/config

            git config --global \
              url."ssh://git@github.com".insteadOf "https://github.com"

            git clone -q --recursive "$CIRCLE_REPOSITORY_URL" "$SOURCE_PATH"

            cd $SOURCE_PATH

            if [[ "$CIRCLE_TAG" ]]; then
              git checkout -q "$CIRCLE_TAG"
            fi

            if [[ "$CIRCLE_BRANCH" ]]; then
              git checkout -q "$CIRCLE_BRANCH"
            fi

      - run:
          name: Should push?
          command: |
            if [[ "$CIRCLE_BRANCH" == "dev" || "$CIRCLE_BRANCH" == "master" ]]
            then
              echo 'export SHOULD_PUSH=true' >> $BASH_ENV
            else
              echo :: will not push
            fi

      - restore_cache:
          keys:
            - go-src-pkg-cache-v2

      - run:
          name: Build binary
          command: |

            export GOCACHE=/go/cache/

            cd $SOURCE_PATH
            make build

      - save_cache:
          key: go-src-pkg-cache-v2
          paths:
            - /go/src/k8s.io/
            - /go/pkg/
            - /go/cache/

      - setup_remote_docker

      - deploy:
          name: Build image & Push to Docker Registry
          command: |
            if [[ ! "$SHOULD_PUSH" ]]; then
              echo :: no push

              exit 0
            fi

            cd $SOURCE_PATH

            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"

            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              export VERSION=latest
            fi

            if [[ "$CIRCLE_BRANCH" == "dev" ]]; then
              export VERSION=dev
            fi

            make image push@magalixcorp tag-file=new-tag version-file=new-version VERSION=$VERSION

      - deploy:
          name: Build image & Push to GCR Registry
          command: |
            if [[ ! "$SHOULD_PUSH" ]]; then
              echo :: no push

              exit 0
            fi

            export AGENT_TAG_MAJOR=2.7

            cd $SOURCE_PATH

            push_to_gcr() {
              GCLOUD_SERVICE_KEY=$1
              GOOGLE_COMPUTE_ZONE=$2
              GOOGLE_PROJECT_ID=$3
              TAG=$4

              echo "pushing to GCP  $GOOGLE_PROJECT_ID"
              gcloud --quiet components update
              echo $GCLOUD_SERVICE_KEY | base64 -d - | gcloud auth activate-service-account --key-file=-
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
              gcloud auth configure-docker
              docker build -t gcr.io/${GOOGLE_PROJECT_ID}/agent:${TAG} -f Dockerfile .
              docker push gcr.io/${GOOGLE_PROJECT_ID}/agent:${TAG}
            }

            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              push_to_gcr ${GCLOUD_SERVICE_KEY_PROD} ${GOOGLE_COMPUTE_ZONE} ${GOOGLE_PROJECT_ID_PROD} ${AGENT_TAG_MAJOR}
            else
              push_to_gcr ${GCLOUD_SERVICE_KEY} ${GOOGLE_COMPUTE_ZONE} ${GOOGLE_PROJECT_ID} ${AGENT_TAG_MAJOR}
            fi




workflows:
  version: 2
  "build & push":
    jobs:
      - "build & push":
          context: org-global
